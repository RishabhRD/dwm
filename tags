!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
${OBJ}	Makefile	/^${OBJ}: config.h config.mk$/;"	t
-0,0 +1,27	diff/grid.diff	/^@@ -0,0 +1,27 @@$/;"	h	newFile:b/layouts.c
-0,0 +1,64	diff/moveresize.diff	/^@@ -0,0 +1,64 @@$/;"	h	newFile:dwm/moveresize.c
-1003,7 +1121,7	diff/tray.diff	/^@@ -1003,7 +1121,7 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1014,6 +1032,37	diff/xre.diff	/^@@ -1014,6 +1032,37 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1029,6 +1031,7	diff/dwm-cfacts-6.2.diff	/^@@ -1029,6 +1031,7 @@$/;"	h	modifiedFile:a/dwm.c
-1029,6 +1031,7	diff/weight.diff	/^@@ -1029,6 +1031,7 @@$/;"	h	modifiedFile:a/dwm.c
-1052,6 +1055,14	diff/dwm-scratchpad-6.2.diff	/^@@ -1052,6 +1055,14 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-106,7 +126,7	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -106,7 +126,7 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-1091,6 +1209,12	diff/tray.diff	/^@@ -1091,6 +1209,12 @@ maprequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-111,6 +111,7	diff/dwm-pertag-6.2.diff	/^@@ -111,6 +111,7 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-12,10 +12,17	diff/status_color.diff	/^@@ -12,10 +12,17 @@ static const char col_gray2[]       = "#444444";$/;"	h	modifiedFile:a/config.def.h
-12,11 +12,18	diff/alpha.diff	/^@@ -12,11 +12,18 @@ static const char col_gray2[]       = "#444444";$/;"	h	modifiedFile:a/config.def.h
-1215,6 +1339,16	diff/tray.diff	/^@@ -1215,6 +1339,16 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1248,6 +1251,7	diff/restart.diff	/^@@ -1248,6 +1251,7 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1265,6 +1399,20	diff/tray.diff	/^@@ -1265,6 +1399,20 @@ recttomon(int x, int y, int w, int h)$/;"	h	modifiedFile:a/dwm.c
-1272,6 +1420,14	diff/tray.diff	/^@@ -1272,6 +1420,14 @@ resize(Client *c, int x, int y, int w, int h, int interact)$/;"	h	modifiedFile:a/dwm.c
-1276,12 +1276,36	diff/gaps.diff	/^@@ -1276,12 +1276,36 @@ void$/;"	h	modifiedFile:a/dwm.c
-1282,6 +1282,13	diff/dwm-noborder-6.2.diff	/^@@ -1282,6 +1282,13 @@ resizeclient(Client *c, int x, int y, int w, int h)$/;"	h	modifiedFile:a/dwm.c
-130,6 +131,7	diff/dwm-pertag-6.2.diff	/^@@ -130,6 +131,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1344,6 +1500,19	diff/tray.diff	/^@@ -1344,6 +1500,19 @@ resizemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1390,6 +1415,38	diff/rotate.diff	/^@@ -1390,6 +1415,38 @@ restack(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-141,6 +159,12	diff/tray.diff	/^@@ -141,6 +159,12 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-142,6 +142,9	diff/restart.diff	/^@@ -142,6 +142,9 @@ Add\/remove all windows with nth tag to\/from the view.$/;"	h	modifiedFile:a/dwm.1
-1433,26 +1602,36	diff/tray.diff	/^@@ -1433,26 +1602,36 @@ setclientstate(Client *c, long state)$/;"	h	modifiedFile:a/dwm.c
-1466,7 +1645,7	diff/tray.diff	/^@@ -1466,7 +1645,7 @@ setfocus(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1501,9 +1527,9	diff/dwm-pertag-6.2.diff	/^@@ -1501,9 +1527,9 @@ void$/;"	h	modifiedFile:a/dwm.c
-1511,6 +1514,23	diff/dwm-cfacts-6.2.diff	/^@@ -1511,6 +1514,23 @@$/;"	h	modifiedFile:a/dwm.c
-1511,6 +1514,23	diff/weight.diff	/^@@ -1511,6 +1514,23 @@$/;"	h	modifiedFile:a/dwm.c
-1522,7 +1548,7	diff/dwm-pertag-6.2.diff	/^@@ -1522,7 +1548,7 @@ setmfact(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1536,6 +1540,9	diff/restart.diff	/^@@ -1536,6 +1540,9 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1541,7 +1549,8	diff/alpha.diff	/^@@ -1541,7 +1549,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-155,6 +158,13	diff/restart.diff	/^@@ -155,6 +158,13 @@ Resize focused window while dragging. Tiled windows will be toggled to the /;"	h	modifiedFile:a/dwm.1
-1555,6 +1734,10	diff/tray.diff	/^@@ -1555,6 +1734,10 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1562,6 +1745,9	diff/tray.diff	/^@@ -1562,6 +1745,9 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1569,7 +1578,7	diff/alpha.diff	/^@@ -1569,7 +1578,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-157,6 +157,7	diff/cycle_layout.diff	/^@@ -157,6 +157,7 @@ static void configure(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1570,6 +1756,8	diff/tray.diff	/^@@ -1570,6 +1756,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-16,6 +16,7	diff/title.diff	/^@@ -16,6 +16,7 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-1616,6 +1625,10	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -1616,6 +1625,10 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1637,6 +1644,20	diff/restart.diff	/^@@ -1637,6 +1644,20 @@ sigchld(int unused)$/;"	h	modifiedFile:a/dwm.c
-165,6 +165,8	diff/rotate.diff	/^@@ -165,6 +165,8 @@ static void detachstack(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1661,6 +1672,7	diff/dwm-scratchpad-6.2.diff	/^@@ -1661,6 +1672,7 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1674,9 +1694,15	diff/dwm-cfacts-6.2.diff	/^@@ -1674,9 +1694,15 @@$/;"	h	modifiedFile:a/dwm.c
-1674,9 +1694,15	diff/weight.diff	/^@@ -1674,9 +1694,15 @@$/;"	h	modifiedFile:a/dwm.c
-1686,13 +1712,15	diff/dwm-cfacts-6.2.diff	/^@@ -1686,13 +1712,15 @@$/;"	h	modifiedFile:a/dwm.c
-1686,13 +1712,15	diff/weight.diff	/^@@ -1686,13 +1712,15 @@$/;"	h	modifiedFile:a/dwm.c
-169,8 +193,10	diff/tray.diff	/^@@ -169,8 +193,10 @@ static void focus(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1699,7 +1725,7	diff/dwm-pertag-6.2.diff	/^@@ -1699,7 +1725,7 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1701,7 +1889,18	diff/tray.diff	/^@@ -1701,7 +1889,18 @@ togglebar(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1713,6 +1714,15	diff/dwm-sticky-6.1.diff	/^@@ -1713,6 +1714,15 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1719,6 +1720,13	diff/actual_fullscreen.diff	/^@@ -1719,6 +1720,13 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1719,6 +1732,32	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -1719,6 +1732,32 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1738,9 +1764,33	diff/dwm-pertag-6.2.diff	/^@@ -1738,9 +1764,33 @@ void$/;"	h	modifiedFile:a/dwm.c
-1748,6 +1760,28	diff/dwm-scratchpad-6.2.diff	/^@@ -1748,6 +1760,28 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-177,6 +193,7	diff/xre.diff	/^@@ -177,6 +193,7 @@ static void grabkeys(void);$/;"	h	modifiedFile:a/dwm.c
-1796,11 +1995,18	diff/tray.diff	/^@@ -1796,11 +1995,18 @@ unmapnotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-18,17 +18,33	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -18,17 +18,33 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-180,21 +183,22	diff/alpha.diff	/^@@ -180,21 +183,22 @@ drw_fontset_free(Fnt *font)$/;"	h	modifiedFile:a/drw.c
-1804,16 +1813,18	diff/alpha.diff	/^@@ -1804,16 +1813,18 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-1811,10 +2017,15	diff/tray.diff	/^@@ -1811,10 +2017,15 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-188,13 +214,16	diff/tray.diff	/^@@ -188,13 +214,16 @@ static void pop(Client *);$/;"	h	modifiedFile:a/dwm.c
-194,6 +196,7	diff/rotate.diff	/^@@ -194,6 +196,7 @@ static void resize(Client *c, int x, int y, int w, int h, int interact);$/;"	h	modifiedFile:a/dwm.c
-1990,6 +2201,121	diff/tray.diff	/^@@ -1990,6 +2201,121 @@ updatestatus(void)$/;"	h	modifiedFile:a/dwm.c
-2,6 +2,7	diff/gaps.diff	/^@@ -2,6 +2,7 @@$/;"	h	modifiedFile:a/config.def.h
-20,6 +20,9	diff/alpha.diff	/^@@ -20,6 +20,9 @@ typedef struct {$/;"	h	modifiedFile:a/drw.h
-200,6 +201,7	diff/dwm-cfacts-6.2.diff	/^@@ -200,6 +201,7 @@$/;"	h	modifiedFile:a/dwm.c
-200,6 +201,7	diff/weight.diff	/^@@ -200,6 +201,7 @@$/;"	h	modifiedFile:a/dwm.c
-2035,11 +2085,37	diff/dwm-pertag-6.2.diff	/^@@ -2035,11 +2085,37 @@ updatewmhints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-204,7 +208,7	diff/alpha.diff	/^@@ -204,7 +208,7 @@ drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	h	modifiedFile:a/drw.c
-205,6 +205,8	diff/restart.diff	/^@@ -205,6 +205,8 @@ static void setup(void);$/;"	h	modifiedFile:a/dwm.c
-2057,6 +2383,16	diff/tray.diff	/^@@ -2057,6 +2383,16 @@ wintoclient(Window w)$/;"	h	modifiedFile:a/dwm.c
-206,6 +235,7	diff/tray.diff	/^@@ -206,6 +235,7 @@ static void seturgent(Client *c, int urg);$/;"	h	modifiedFile:a/dwm.c
-207,7 +207,7	diff/xre.diff	/^@@ -207,7 +207,7 @@ drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	h	modifiedFile:a/drw.c
-211,6 +211,7	diff/actual_fullscreen.diff	/^@@ -211,6 +211,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-211,6 +211,7	diff/dwm-sticky-6.1.diff	/^@@ -211,6 +211,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-211,6 +214,7	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -211,6 +214,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2110,6 +2121,43	diff/alpha.diff	/^@@ -2110,6 +2121,43 @@ xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	h	modifiedFile:a/dwm.c
-2110,6 +2159,17	diff/xre.diff	/^@@ -2110,6 +2159,17 @@ xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	h	modifiedFile:a/dwm.c
-2110,6 +2446,22	diff/tray.diff	/^@@ -2110,6 +2446,22 @@ xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	h	modifiedFile:a/dwm.c
-213,6 +213,7	diff/dwm-scratchpad-6.2.diff	/^@@ -213,6 +213,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2136,6 +2196,8	diff/xre.diff	/^@@ -2136,6 +2196,8 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2139,3 +2141,106	diff/centeredmaster.diff	/^@@ -2139,3 +2141,106 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2139,6 +2160,7	diff/restart.diff	/^@@ -2139,6 +2160,7 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-22,7 +22,7	diff/alpha.diff	/^@@ -22,7 +22,7 @@ FREETYPEINC = \/usr\/include\/freetype2$/;"	h	modifiedFile:a/config.mk
-223,18 +253,23	diff/tray.diff	/^@@ -223,18 +253,23 @@ static int updategeom(void);$/;"	h	modifiedFile:a/dwm.c
-232,6 +234,7	diff/alpha.diff	/^@@ -232,6 +234,7 @@ static Monitor *wintomon(Window w);$/;"	h	modifiedFile:a/dwm.c
-232,6 +249,7	diff/xre.diff	/^@@ -232,6 +249,7 @@ static Monitor *wintomon(Window w);$/;"	h	modifiedFile:a/dwm.c
-233,6 +233,8	diff/centeredmaster.diff	/^@@ -233,6 +233,8 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-257,9 +292,10	diff/tray.diff	/^@@ -257,9 +292,10 @@ static void (*handler[LASTEvent]) (XEvent *) = {$/;"	h	modifiedFile:a/dwm.c
-260,6 +262,7	diff/restart.diff	/^@@ -260,6 +262,7 @@ static void (*handler[LASTEvent]) (XEvent *) = {$/;"	h	modifiedFile:a/dwm.c
-260,9 +264,7	diff/alpha.diff	/^@@ -260,9 +264,7 @@ drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned in/;"	h	modifiedFile:a/drw.c
-268,6 +271,11	diff/alpha.diff	/^@@ -268,6 +271,11 @@ static Drw *drw;$/;"	h	modifiedFile:a/dwm.c
-27,7 +30,7	diff/alpha.diff	/^@@ -27,7 +30,7 @@ typedef struct {$/;"	h	modifiedFile:a/drw.h
-271,6 +273,15	diff/dwm-pertag-6.2.diff	/^@@ -271,6 +273,15 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-273,6 +274,8	diff/dwm-scratchpad-6.2.diff	/^@@ -273,6 +274,8 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-299,6 +303,11	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -299,6 +303,11 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-3,6 +3,10	diff/tray.diff	/^@@ -3,6 +3,10 @@$/;"	h	modifiedFile:a/config.def.h
-308,7 +317,7	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -308,7 +317,7 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-35,6 +35,7	diff/xre.diff	/^@@ -35,6 +35,7 @@$/;"	h	modifiedFile:a/dwm.c
-36,11 +36,13	diff/grid.diff	/^@@ -36,11 +36,13 @@ static const float mfact     = 0.55; \/* factor of master area size [0.05..0/;"	h	modifiedFile:a/config.def.h
-38,8 +41,8	diff/alpha.diff	/^@@ -38,8 +41,8 @@ unsigned int drw_fontset_getwidth(Drw *drw, const char *text);$/;"	h	modifiedFile:a/drw.h
-39,6 +39,8	diff/centeredmaster.diff	/^@@ -39,6 +39,8 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-39,7 +39,7	diff/xre.diff	/^@@ -39,7 +39,7 @@ void drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned /;"	h	modifiedFile:a/drw.h
-41,6 +41,7	diff/cycle_layout.diff	/^@@ -41,6 +41,7 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-439,7 +475,7	diff/tray.diff	/^@@ -439,7 +475,7 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-482,6 +518,11	diff/tray.diff	/^@@ -482,6 +518,11 @@ cleanup(void)$/;"	h	modifiedFile:a/dwm.c
-49,7 +49,7	diff/dwm-sticky-6.1.diff	/^@@ -49,7 +49,7 @@$/;"	h	modifiedFile:a/dwm.c
-512,9 +553,57	diff/tray.diff	/^@@ -512,9 +553,57 @@ cleanupmon(Monitor *mon)$/;"	h	modifiedFile:a/dwm.c
-52,8 +52,8	diff/gaps.diff	/^@@ -52,8 +52,8 @@$/;"	h	modifiedFile:a/dwm.c
-54,7 +54,10	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -54,7 +54,10 @@$/;"	h	modifiedFile:a/dwm.c
-56,6 +57,21	diff/xre.diff	/^@@ -56,6 +57,21 @@$/;"	h	modifiedFile:a/dwm.c
-56,7 +57,7	diff/xre.diff	/^@@ -56,7 +57,7 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-567,7 +656,7	diff/tray.diff	/^@@ -567,7 +656,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-57,12 +57,30	diff/tray.diff	/^@@ -57,12 +57,30 @@$/;"	h	modifiedFile:a/dwm.c
-57,6 +57,8	diff/alpha.diff	/^@@ -57,6 +57,8 @@$/;"	h	modifiedFile:a/dwm.c
-58,11 +58,14	diff/dwm-scratchpad-6.2.diff	/^@@ -58,11 +58,14 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-59,6 +75,7	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -59,6 +75,7 @@ static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn/;"	h	modifiedFile:a/config.def.h
-59,7 +59,7	diff/status_color.diff	/^@@ -59,7 +59,7 @@$/;"	h	modifiedFile:a/dwm.c
-59,7 +59,7	diff/title.diff	/^@@ -59,7 +59,7 @@$/;"	h	modifiedFile:a/dwm.c
-61,7 +61,7	diff/alpha.diff	/^@@ -61,7 +61,7 @@ utf8decode(const char *c, long *u, size_t clen)$/;"	h	modifiedFile:a/drw.c
-631,6 +642,7	diff/dwm-pertag-6.2.diff	/^@@ -631,6 +642,7 @@ Monitor *$/;"	h	modifiedFile:a/dwm.c
-64,6 +64,8	diff/rotate.diff	/^@@ -64,6 +64,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-641,6 +653,20	diff/dwm-pertag-6.2.diff	/^@@ -641,6 +653,20 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-645,6 +646,23	diff/cycle_layout.diff	/^@@ -645,6 +646,23 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-652,6 +741,11	diff/tray.diff	/^@@ -652,6 +741,11 @@ destroynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-695,19 +789,23	diff/tray.diff	/^@@ -695,19 +789,23 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-699,13 +699,27	diff/status_color.diff	/^@@ -699,13 +699,27 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-7,15 +7,16	diff/xre.diff	/^@@ -7,15 +7,16 @@ static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	h	modifiedFile:a/config.def.h
-70,6 +70,9	diff/dwm-cfacts-6.2.diff	/^@@ -70,6 +70,9 @@$/;"	h	modifiedFile:a/config.def.h
-70,6 +70,9	diff/weight.diff	/^@@ -70,6 +70,9 @@$/;"	h	modifiedFile:a/config.def.h
-70,8 +70,11	diff/alpha.diff	/^@@ -70,8 +70,11 @@ drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned in/;"	h	modifiedFile:a/drw.c
-728,7 +826,7	diff/tray.diff	/^@@ -728,7 +826,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-730,7 +730,7	diff/title.diff	/^@@ -730,7 +730,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-739,7 +837,7	diff/tray.diff	/^@@ -739,7 +837,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-74,6 +76,8	diff/centeredmaster.diff	/^@@ -74,6 +76,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-76,6 +76,7	diff/dwm-sticky-6.1.diff	/^@@ -76,6 +76,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-76,6 +77,8	diff/cycle_layout.diff	/^@@ -76,6 +77,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-76,6 +78,7	diff/grid.diff	/^@@ -76,6 +78,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-765,6 +768,28	diff/rotate.diff	/^@@ -765,6 +768,28 @@ drawbars(void)$/;"	h	modifiedFile:a/dwm.c
-776,8 +874,11	diff/tray.diff	/^@@ -776,8 +874,11 @@ expose(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-78,6 +78,7	diff/actual_fullscreen.diff	/^@@ -78,6 +78,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-84,6 +101,9	diff/dwm-scratchpads-20200414-728d397b.diff	/^@@ -84,6 +101,9 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-84,6 +85,7	diff/xre.diff	/^@@ -84,6 +85,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-862,10 +963,17	diff/tray.diff	/^@@ -862,10 +963,17 @@ getatomprop(Client *c, Atom prop)$/;"	h	modifiedFile:a/dwm.c
-87,6 +87,7	diff/dwm-cfacts-6.2.diff	/^@@ -87,6 +87,7 @@$/;"	h	modifiedFile:a/dwm.c
-87,6 +87,7	diff/weight.diff	/^@@ -87,6 +87,7 @@$/;"	h	modifiedFile:a/dwm.c
-87,7 +90,7	diff/alpha.diff	/^@@ -87,7 +90,7 @@ drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	h	modifiedFile:a/drw.c
-899,6 +1007,16	diff/tray.diff	/^@@ -899,6 +1007,16 @@ getstate(Window w)$/;"	h	modifiedFile:a/dwm.c
-92,6 +92,12	diff/cycle_layout.diff	/^@@ -92,6 +92,12 @@ Sets monocle layout.$/;"	h	modifiedFile:a/dwm.1
-92,7 +92,7	diff/dwm-sticky-6.1.diff	/^@@ -92,7 +92,7 @@ struct Client {$/;"	h	modifiedFile:a/dwm.c
-94,6 +94,7	diff/restart.diff	/^@@ -94,6 +94,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-966,7 +992,7	diff/dwm-pertag-6.2.diff	/^@@ -966,7 +992,7 @@ grabkeys(void)$/;"	h	modifiedFile:a/dwm.c
.c.o	Makefile	/^.c.o:$/;"	t
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon0f53a99e060a	file:
BETWEEN	util.h	/^#define BETWEEN(/;"	d
BUGS	dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	dwm.c	/^#define BUTTONMASK /;"	d	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon0f53a99e0708	file:
CC	config.mk	/^CC = cc$/;"	m
CFLAGS	config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CLEANMASK	dwm.c	/^#define CLEANMASK(/;"	d	file:
CPPFLAGS	config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=2 -DVERSION=\\"${VERSION}\\" ${XINE/;"	m
CUSTOMIZATION	dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	dwm.c	/^struct Client {$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClkClientWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkLast	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkLtSymbol	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkRootWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkStatusText	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkTagBar	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkWinTitle	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
Clr	drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon0f5116480108
CurLast	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurMove	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurNormal	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurResize	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
DESCRIPTION	dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DWM	dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon0f5116480308
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
HEIGHT	dwm.c	/^#define HEIGHT(/;"	d	file:
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC}$/;"	m
INTERSECT	dwm.c	/^#define INTERSECT(/;"	d	file:
ISSUES	dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	dwm.c	/^#define ISVISIBLE(/;"	d	file:
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon0f53a99e0808	file:
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LENGTH	dwm.c	/^#define LENGTH(/;"	d	file:
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lXrender$/;"	m
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon0f53a99e0908	file:
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	util.h	/^#define MAX(/;"	d
MIN	util.h	/^#define MIN(/;"	d
MODKEY	config.def.h	/^#define MODKEY /;"	d
MODKEY	config.h	/^#define MODKEY /;"	d
MOUSEMASK	dwm.c	/^#define MOUSEMASK /;"	d	file:
Monitor	dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
NAME	dwm.1	/^.SH NAME$/;"	s	title:DWM
NUMTAGS	dwm.c	/^#define NUMTAGS	/;"	d	file:
NetActiveWindow	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetClientList	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetLast	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetSupported	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMCheck	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMFullscreen	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMName	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMState	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowType	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowTypeDialog	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NumTags	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPAQUE	dwm.c	/^#define OPAQUE /;"	d	file:
OPTIONS	dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
Pertag	dwm.c	/^struct Pertag {$/;"	s	file:
Pertag	dwm.c	/^typedef struct Pertag Pertag;$/;"	t	typeref:struct:Pertag	file:
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon0f53a99e0a08	file:
SEE	dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	config.def.h	/^#define SHCMD(/;"	d
SHCMD	config.h	/^#define SHCMD(/;"	d
SIGNALS	dwm.1	/^.SH SIGNALS$/;"	s	title:DWM
SPTAG	dwm.c	/^#define SPTAG(/;"	d	file:
SPTAGMASK	dwm.c	/^#define SPTAGMASK /;"	d	file:
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
SYNOPSIS	dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SchemeBlueFg	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	e	enum:__anon0f53a99e0203	file:
SchemeNorm	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	e	enum:__anon0f53a99e0203	file:
SchemeSel	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	e	enum:__anon0f53a99e0203	file:
SchemeTitle	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	e	enum:__anon0f53a99e0203	file:
SchemeUrgent	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	e	enum:__anon0f53a99e0203	file:
SchemeWarn	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	e	enum:__anon0f53a99e0203	file:
Sp	config.def.h	/^} Sp;$/;"	t	typeref:struct:__anon9258968e0108
Sp	config.h	/^} Sp;$/;"	t	typeref:struct:__anon41b17d910108
TAGKEYS	config.def.h	/^#define TAGKEYS(/;"	d
TAGKEYS	config.h	/^#define TAGKEYS(/;"	d
TAGMASK	dwm.c	/^#define TAGMASK /;"	d	file:
TEXTW	dwm.c	/^#define TEXTW(/;"	d	file:
USAGE	dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	config.mk	/^VERSION = 6.2$/;"	m
WIDTH	dwm.c	/^#define WIDTH(/;"	d	file:
WMDelete	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMLast	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMProtocols	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMState	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMTakeFocus	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
X11INC	config.mk	/^X11INC = \/usr\/include\/X11$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/lib\/X11$/;"	m
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
__anon0f5116480108	drw.h	/^typedef struct {$/;"	s
__anon0f5116480203	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon0f5116480308	drw.h	/^typedef struct {$/;"	s
__anon0f53a99e0103	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon0f53a99e0203	dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeWarn, SchemeUrgent,SchemeBlueFg }; \/* color sc/;"	g	file:
__anon0f53a99e0303	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon0f53a99e0403	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon0f53a99e0503	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon0f53a99e060a	dwm.c	/^typedef union {$/;"	u	file:
__anon0f53a99e0708	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0808	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0908	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0a08	dwm.c	/^typedef struct {$/;"	s	file:
__anon41b17d910108	config.h	/^typedef struct {$/;"	s
__anon9258968e0108	config.def.h	/^typedef struct {$/;"	s
a/config.def.h	diff/actual_fullscreen.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/alpha.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/centeredmaster.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/cycle_layout.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/dwm-cfacts-6.2.diff	/^--- a\/config.def.h	2019-02-02 15:55:28.000000000 +0300$/;"	m
a/config.def.h	diff/dwm-scratchpad-6.2.diff	/^--- a\/config.def.h	2019-06-06 21:23:27.006661784 +0200$/;"	m
a/config.def.h	diff/dwm-scratchpads-20200414-728d397b.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/dwm-sticky-6.1.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/gaps.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/grid.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/restart.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/rotate.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/status_color.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/title.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/tray.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	diff/weight.diff	/^--- a\/config.def.h	2019-02-02 15:55:28.000000000 +0300$/;"	m
a/config.def.h	diff/xre.diff	/^--- a\/config.def.h$/;"	m
a/config.mk	diff/alpha.diff	/^--- a\/config.mk$/;"	m
a/drw.c	diff/alpha.diff	/^--- a\/drw.c$/;"	m
a/drw.c	diff/xre.diff	/^--- a\/drw.c$/;"	m
a/drw.h	diff/alpha.diff	/^--- a\/drw.h$/;"	m
a/drw.h	diff/xre.diff	/^--- a\/drw.h$/;"	m
a/dwm.1	diff/cycle_layout.diff	/^--- a\/dwm.1$/;"	m
a/dwm.1	diff/restart.diff	/^--- a\/dwm.1$/;"	m
a/dwm.c	diff/actual_fullscreen.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/alpha.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/centeredmaster.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/cycle_layout.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/dwm-cfacts-6.2.diff	/^--- a\/dwm.c	2019-02-02 15:55:28.000000000 +0300$/;"	m
a/dwm.c	diff/dwm-noborder-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/dwm-pertag-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/dwm-scratchpad-6.2.diff	/^--- a\/dwm.c	2019-06-06 21:23:27.023328450 +0200$/;"	m
a/dwm.c	diff/dwm-scratchpads-20200414-728d397b.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/dwm-sticky-6.1.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/gaps.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/restart.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/rotate.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/status_color.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/title.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/tray.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	diff/weight.diff	/^--- a\/dwm.c	2019-02-02 15:55:28.000000000 +0300$/;"	m
a/dwm.c	diff/xre.diff	/^--- a\/dwm.c$/;"	m
all	Makefile	/^all: options dwm$/;"	t
alphas	config.def.h	/^static const unsigned int alphas[][3]      = {$/;"	v	typeref:typename:const unsigned int[][3]
alphas	config.h	/^static const unsigned int alphas[][3]      = {$/;"	v	typeref:typename:const unsigned int[][3]
applyrules	dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:const Arg	file:
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:const Arg	file:
arrange	dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
attach	dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attachstack	dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
b/layouts.c	diff/grid.diff	/^+++ b\/layouts.c$/;"	n
baralpha	config.def.h	/^static const unsigned int baralpha = 0xd0;$/;"	v	typeref:typename:const unsigned int
baralpha	config.h	/^static const unsigned int baralpha = 0xd0;$/;"	v	typeref:typename:const unsigned int
barwin	dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
baseh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
bh	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
borderalpha	config.def.h	/^static const unsigned int borderalpha = OPAQUE;$/;"	v	typeref:typename:const unsigned int
borderalpha	config.h	/^static const unsigned int borderalpha = OPAQUE;$/;"	v	typeref:typename:const unsigned int
borderpx	config.def.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	config.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
button	dwm.c	/^	unsigned int button;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
buttonpress	dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttons	config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
by	dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
checkotherwm	diff/autostart.sh	/^ 	checkotherwm();$/;"	f
checkotherwm	dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
class	dwm.c	/^	const char *class;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
clean	Makefile	/^clean:$/;"	t
cleanup	diff/autostart.sh	/^ 	cleanup();$/;"	f
cleanup	dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	dwm.c	/^	unsigned int click;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
clientmessage	dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clients	dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
cmap	drw.h	/^	Colormap cmap;$/;"	m	struct:__anon0f5116480308	typeref:typename:Colormap
cmap	dwm.c	/^static Colormap cmap;$/;"	v	typeref:typename:Colormap	file:
cmd	config.def.h	/^	const void *cmd;$/;"	m	struct:__anon9258968e0108	typeref:typename:const void *
cmd	config.h	/^	const void *cmd;$/;"	m	struct:__anon41b17d910108	typeref:typename:const void *
col_black	config.def.h	/^static const char col_black[]       = "#000000";$/;"	v	typeref:typename:const char[]
col_black	config.h	/^static const char col_black[]       = "#000000";$/;"	v	typeref:typename:const char[]
col_blue	config.def.h	/^static const char col_blue[]       = "#2b70f1";$/;"	v	typeref:typename:const char[]
col_blue	config.h	/^static const char col_blue[]       = "#2b70f1";$/;"	v	typeref:typename:const char[]
col_cyan	config.def.h	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]
col_cyan	config.h	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]
col_gray1	config.def.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray1	config.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray2	config.def.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray2	config.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray3	config.def.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray3	config.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray4	config.def.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_gray4	config.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_red	config.def.h	/^static const char col_red[]         = "#ff0000";$/;"	v	typeref:typename:const char[]
col_red	config.h	/^static const char col_red[]         = "#ff0000";$/;"	v	typeref:typename:const char[]
col_white	config.def.h	/^static const char col_white[]       = "#ffffff";$/;"	v	typeref:typename:const char[]
col_white	config.h	/^static const char col_white[]       = "#ffffff";$/;"	v	typeref:typename:const char[]
col_yellow	config.def.h	/^static const char col_yellow[]      = "#ffff00";$/;"	v	typeref:typename:const char[]
col_yellow	config.h	/^static const char col_yellow[]      = "#ffff00";$/;"	v	typeref:typename:const char[]
colors	config.def.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
colors	config.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
config.h	Makefile	/^config.h:$/;"	t
configure	dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
createmon	dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
curtag	dwm.c	/^	unsigned int curtag, prevtag; \/* current and previous tag *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int	file:
cyclelayout	dwm.c	/^cyclelayout(const Arg *arg) {$/;"	f	typeref:typename:void
depth	drw.h	/^	unsigned int depth;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
depth	dwm.c	/^static int depth;$/;"	v	typeref:typename:int	file:
destroynotify	dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
detach	dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
die	util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
dirtomon	dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dist	Makefile	/^dist: clean$/;"	t
dmenucmd	config.def.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenucmd	config.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenufont	config.def.h	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]
dmenufont	config.h	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]
dmenumon	config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *
dpy	dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable
drawbar	dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbars	dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drw	dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname, unsigned int alpha)$/;"	f	typeref:typename:void
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h, Visual *visual/;"	f	typeref:typename:Drw *
drw_cur_create	drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_free	drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_fontset_create	drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_free	drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_getwidth	drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_free	drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_map	drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_rect	drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_resize	drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_scm_create	drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], const unsigned int alphas[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_setfontset	drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setscheme	drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
dwm	Makefile	/^dwm: ${OBJ}$/;"	t
dwm	README.md	/^# dwm$/;"	c
dwm/moveresize.c	diff/moveresize.diff	/^+++ dwm\/moveresize.c$/;"	n
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
enternotify	dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
expose	dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
f	dwm.c	/^	float f;$/;"	m	union:__anon0f53a99e060a	typeref:typename:float	file:
focus	dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focusin	dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusmon	dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
fonts	config.def.h	/^static const char *fonts[] = {$/;"	v	typeref:typename:const char * []
fonts	config.h	/^static const char *fonts[] = {$/;"	v	typeref:typename:const char * []
fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *
func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0808	typeref:typename:void (*)(const Arg *)	file:
func	dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0708	typeref:typename:void (*)(const Arg * arg)	file:
gappx	config.def.h	/^static const unsigned int gappx     = 10;        \/* gaps between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	config.h	/^static const unsigned int gappx     = 10;        \/* gaps between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	dwm.c	/^	int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gc	drw.h	/^	GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC
getatomprop	dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getrootptr	dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getstate	dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
gettextprop	dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
grabbuttons	dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabkeys	dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
grid	layouts.c	/^grid(Monitor *m) {$/;"	f	typeref:typename:void
h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
h	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
handler	dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
i	dwm.c	/^	int i;$/;"	m	union:__anon0f53a99e060a	typeref:typename:int	file:
inch	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
install	Makefile	/^install: all$/;"	t
instance	dwm.c	/^	const char *instance;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
isfixed	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^	int isfloating;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
isfullscreen	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
issticky	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
isuniquegeom	dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isurgent	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
keypress	dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keys	config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:KeySym	file:
killclient	dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
lrpad	dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltidxs	dwm.c	/^	const Layout *ltidxs[LENGTH(tags) + 1][2]; \/* matrix of tags and layouts indexes  *\/$/;"	m	struct:Pertag	typeref:typename:const Layout * [][2]	file:
ltsymbol	dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
main	dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	transient.c	/^int main(void) {$/;"	f	typeref:typename:int
manage	dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
mappingnotify	dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
mask	dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
maxa	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mfact	config.def.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	config.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mfacts	dwm.c	/^	float mfacts[LENGTH(tags) + 1]; \/* mfacts per tag *\/$/;"	m	struct:Pertag	typeref:typename:float[]	file:
mh	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
minOpen	view.c	/^minOpen(const Arg *arg)$/;"	f	typeref:typename:void
mina	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mod	dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:unsigned int	file:
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
monocle	dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
movemouse	dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
mw	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
name	config.def.h	/^	const char *name;$/;"	m	struct:__anon9258968e0108	typeref:typename:const char *
name	config.h	/^	const char *name;$/;"	m	struct:__anon41b17d910108	typeref:typename:const char *
name	dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[][]	file:
neverfocus	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
nexttiled	dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nmaster	config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	config.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nmasters	dwm.c	/^	int nmasters[LENGTH(tags) + 1]; \/* number of windows in master area *\/$/;"	m	struct:Pertag	typeref:typename:int[]	file:
num	dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
oldbw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
options	Makefile	/^options:$/;"	t
pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pertag	dwm.c	/^	Pertag *pertag;$/;"	m	struct:Monitor	typeref:typename:Pertag *	file:
pop	dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
prevtag	dwm.c	/^	unsigned int curtag, prevtag; \/* current and previous tag *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int	file:
propertynotify	dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
quit	dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
recttomon	dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
resize	dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resizeclient	dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	config.def.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	config.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
restack	dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
restart	dwm.c	/^static int restart = 0;$/;"	v	typeref:typename:int	file:
root	drw.h	/^	Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	diff/autostart.sh	/^ 	run();$/;"	f
run	dwm.c	/^run(void)$/;"	f	typeref:typename:void
runAutostart	diff/autostart.sh	/^+	runAutostart();$/;"	f
running	dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
scan	diff/autostart.sh	/^ 	scan();$/;"	f
scan	dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *
scheme	dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
scratchpads	config.def.h	/^static Sp scratchpads[] = {$/;"	v	typeref:typename:Sp[]
scratchpads	config.h	/^static Sp scratchpads[] = {$/;"	v	typeref:typename:Sp[]
screen	drw.h	/^	int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int
screen	dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
sel	dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sellt	dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sellts	dwm.c	/^	unsigned int sellts[LENGTH(tags) + 1]; \/* selected layouts *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int[]	file:
selmon	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor **	file:
seltags	dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sendevent	dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendmon	dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
setclientstate	dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setfocus	dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setgaps	dwm.c	/^setgaps(const Arg *arg)$/;"	f	typeref:typename:void
setlayout	dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setup	diff/autostart.sh	/^ 	setup();$/;"	f
setup	dwm.c	/^setup(void)$/;"	f	typeref:typename:void
seturgent	dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
sh	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
shiftview	view.c	/^shiftview(const Arg *arg)$/;"	f	typeref:typename:void
showbar	config.def.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	config.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showbars	dwm.c	/^	int showbars[LENGTH(tags) + 1]; \/* display bar for the current tag *\/$/;"	m	struct:Pertag	typeref:typename:int[]	file:
showhide	dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
sigchld	dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sighup	dwm.c	/^sighup(int unused)$/;"	f	typeref:typename:void
sigterm	dwm.c	/^sigterm(int unused)$/;"	f	typeref:typename:void
snap	config.def.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	config.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snext	dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
spawn	dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spcmd1	config.def.h	/^const char *spcmd1[] = {"st", "-n", "spterm", "-g", "120x34", NULL };$/;"	v	typeref:typename:const char * []
spcmd1	config.h	/^const char *spcmd1[] = {"st", "-n", "spterm", "-g", "120x34", NULL };$/;"	v	typeref:typename:const char * []
spcmd2	config.def.h	/^const char *spcmd2[] = {"st", "-n", "spcalc", "-f", "monospace:size=15", "-g", "80x24", "-e", "b/;"	v	typeref:typename:const char * []
spcmd2	config.h	/^const char *spcmd2[] = {"st", "-n", "spcalc", "-f", "monospace:size=15", "-g", "80x24", "-e", "b/;"	v	typeref:typename:const char * []
stack	dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stext	dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
sw	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
symbol	dwm.c	/^	const char *symbol;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:const char *	file:
tag	dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	config.def.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	config.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:
tagset	dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
termcmd	config.def.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcmd	config.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
tile	dwm.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void
title	dwm.c	/^	const char *title;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
togglebar	dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	dwm.c	/^togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
togglescratch	dwm.c	/^togglescratch(const Arg *arg)$/;"	f	typeref:typename:void
togglesticky	dwm.c	/^togglesticky(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
topbar	config.def.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	config.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
ui	dwm.c	/^	unsigned int ui;$/;"	m	union:__anon0f53a99e060a	typeref:typename:unsigned int	file:
unfocus	dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
uninstall	Makefile	/^uninstall:$/;"	t
unmanage	dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmapnotify	dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
updatebarpos	dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updategeom	dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatetitle	dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
useargb	dwm.c	/^static int useargb = 0;$/;"	v	typeref:typename:int	file:
utf8decode	drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decodebyte	drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8validate	drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
v	dwm.c	/^	const void *v;$/;"	m	union:__anon0f53a99e060a	typeref:typename:const void *	file:
view	dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
visual	drw.h	/^	Visual *visual;$/;"	m	struct:__anon0f5116480308	typeref:typename:Visual *
visual	dwm.c	/^static Visual *visual;$/;"	v	typeref:typename:Visual *	file:
w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
w	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
wh	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
win	dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
wintoclient	dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
ww	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
x	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
xerror	dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_free	drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
xinitvisual	dwm.c	/^xinitvisual()$/;"	f	typeref:typename:void
y	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
zoom	dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
